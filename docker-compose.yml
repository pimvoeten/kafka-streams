---
version: '3.8'

networks:
  kafka-streams:

services:
  kafka-streams-generators:
    image: kafka-streams-generators:latest
    networks:
      kafka-streams:
    depends_on:
      - kafka-create-topics
    environment:
      SPRING_PROFILES_ACTIVE: docker
      BL_GEN_INTERVAL: 500
      BL_GEN_AMOUNT: 5
      VV_ID_LENGTH: 5
      VV_GEN_INTERVAL: 500
      VV_GEN_AMOUNT: 5

  streams-app:
    image: kafka-streams-app:latest
    networks:
      kafka-streams:
    expose:
      - 9001
      - 9010
    ports:
      - 9010
    depends_on:
      - kafka-create-topics
    restart: always
    environment:
      SERVER_PORT: 9001
      SPRING_PROFILES_ACTIVE: docker
      JAVA_OPTS: "-XX:+UseContainerSupport \
      -XX:+UseStringDeduplication \
      -XX:+UnlockExperimentalVMOptions \
      -XX:+UseZGC \
      -XX:MinRAMPercentage=25 \
      -XX:MaxRAMPercentage=75 \
      -Dcom.sun.management.jmxremote=true \
      -Dcom.sun.management.jmxremote.ssl=false \
      -Dcom.sun.management.jmxremote.authenticate=false \
      -Dcom.sun.management.jmxremote.local.only=false \
      -Dcom.sun.management.jmxremote.port=9010 \
      -Dcom.sun.management.jmxremote.rmi.port=9010 \
      -Djava.rmi.server.hostname=127.0.0.1"

  zookeeper:
    image: confluentinc/cp-zookeeper:6.0.0
    hostname: zookeeper
    ports:
      - "32181:32181"
    networks:
      - kafka-streams
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000

  kafka_1:
    image: confluentinc/cp-enterprise-kafka:6.0.0
    hostname: kafka_1
    depends_on:
      - zookeeper
    ports:
      - "29091:29091"
      - "9091:9091"
    networks:
      - kafka-streams
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:32181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka_1:9091,PLAINTEXT_HOST://localhost:29091
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
    working_dir: /data

  kafka_2:
    image: confluentinc/cp-enterprise-kafka:6.0.0
    hostname: kafka_2
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
    networks:
      - kafka-streams
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:32181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka_2:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
    working_dir: /data

  kafka_3:
    image: confluentinc/cp-enterprise-kafka:6.0.0
    hostname: kafka_3
    depends_on:
      - zookeeper
    ports:
      - "29093:29093"
      - "9093:9093"
    networks:
      - kafka-streams
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:32181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka_3:9093,PLAINTEXT_HOST://localhost:29093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
    working_dir: /data

  kafka-create-topics:
    image: confluentinc/cp-enterprise-kafka:6.0.0
    hostname: kafka-create-topics
    networks:
      - kafka-streams
    depends_on:
      - kafka_1
    command: [ "bash", "./create-topics.sh" ]
    working_dir: /scripts
    volumes:
      - ./docker/topics:/scripts

  akhq:
    image: tchiotludo/akhq
    hostname: akhq
    restart: always
    ports:
      - "8080:8080"
    networks:
      - kafka-streams
    depends_on:
      - zookeeper
      - kafka_1
    volumes:
      - ./docker/akhq/application.yml:/app/application.yml

  nginx:
    image: nginx:latest
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - kafka-streams
    ports:
      - "9000:9000"
    depends_on:
      - streams-app